<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication 
  title="merapi screen capture"
  xmlns:mx="http://www.adobe.com/2006/mxml" 
  xmlns:merapiproject="http://merapiproject.net/2009"
  xmlns:messages="merapi.examples.screencapture.messages.*"
  applicationComplete="init()"
  layout="absolute" horizontalCenter="0" 
  verticalScrollPolicy="off"
  verticalCenter="0" width="225" height="60" xmlns:handlers="merapi.examples.screencapture.handlers.*">
	<!--
	Screen Capture example was written by Rich Tretola
	http://www.twitter.com/richtretola
	http://blog.everythingflex.com
	http://www.happytoad.com
	-->
	<mx:states>
		<mx:State name="withshots">
			<mx:AddChild position="lastChild">
				<mx:Tile id="tile" width="100%" horizontalCenter="0" horizontalGap="0" verticalGap="0"  y="61"/>
			</mx:AddChild>
			<mx:SetProperty name="height" value="150"/>
			<mx:AddChild position="lastChild">
				<mx:Label x="14" y="40" text="Click on thumb below for a preview"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	
	<!-- ====  screenCaptureMessage : The message sent accross the bridge  ======================== -->
	<messages:ScreenCaptureMessage id="screepCaptureMessage" 
		storagePath="{storageDirectory.nativePath + File.separator}" />

	<!-- ====  screenCaptureHandler : The message handler for the ScreenCaptureMessage.TAKE_SCREEN_SHOT message type  == -->
	<handlers:ScreenCaptureHandler id="screenCaptureHandler" 
		type="{ ScreenCaptureMessage.TAKE_SCREEN_SHOT }" /> 
	  
	<mx:Script>
  		<![CDATA[
  			import mx.controls.Alert;
  			import mx.controls.Image;
  			import merapi.messages.IMessage;
  			import mx.rpc.events.ResultEvent;
  			import merapi.messages.Message;
  			
  			/*
  			 * set storage directory
  			 */
  			private var storageDirectory:File = File.userDirectory.resolvePath("Pictures/merapi/screenshots");; 
  			
  			private function init():void{
  				/*
  				 * set application so it is always in front of other applications
  				 */
  				this.alwaysInFront = true;
  				/*
  				 * create storage directory if it doesn't currently exist
  				 */
  				if(!storageDirectory.exists)storageDirectory.createDirectory();
  				/*
  				 * add event listener to listen for change 
  				 * event on ScreenCaptureHandler
  				 */
  				screenCaptureHandler.addEventListener(Event.CHANGE,completed);
  			}
  			
  			private function takeShot():void{
  				/*
  				 * Hide application so it doesn't appear in screen shot
  				 */
  				this.visible = false;
  				/*
  				 * Call send() method to send the message to Java
  				 */
  				screepCaptureMessage.send();
  			}
  			
  			/*
  			 * event listener for ScreenCaptureHandler CHANGE Event
  			 */
  			private function completed( event : Event ) : void
  			{
  				/*
  				 * set current state to show screen shot thumbnails
  				 */
  				this.currentState = "withshots";
  				/*
  				 * set application back to visible
  				 */
  				this.visible = true;
  				/*
  				 * if there are more than 9 thumbnails, reset tile list
  				 */
  				if(tile.numChildren > 9) {
                   tile.removeAllChildren();
                }
  				/* 
  				 * create new thumbnail
  				 */
  				var image:Image = new Image();
  					image.addEventListener(MouseEvent.CLICK,openPreview);
  					image.toolTip = "Click for preview";
                    image.width =  45;
                    image.height = 35;
                /*
                 * cast the event.target as ScreenCaptureHandler
                 */
                var scHandler:ScreenCaptureHandler = event.target as ScreenCaptureHandler;
                /*
                 * use imagePath returned from Java to resolve the new image url
                 */
  				image.source = File.userDirectory.resolvePath(scHandler.imagePath).url;
	        	/*
	        	 * add thumbnail to tile list
	        	 */   
                tile.addChild(image);	
  			}
  			
  			/*
  			 *  set the image source and open a new preview window
  			 */
  		    private function openPreview(event:MouseEvent):void{
  		    	var image:Image = event.currentTarget as Image;
  		    	var win:PreviewWindow = new PreviewWindow();
  		    	win.imageSource = image.source as String;
  		    	win.open();
  		    }

  		]]>
	</mx:Script>
	<mx:Button click="takeShot()" label="Take Screen Shot" horizontalCenter="0" y="10"/>
</mx:WindowedApplication>
